namespace Test;
using BenchmarkDotNet.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;

public class Benchmark
{
    HashSet<MyHugeEnum> _hashset = new HashSet<MyHugeEnum>(600);
    BitArray _bitarray = new BitArray(600);

    [GlobalSetup]
    public void GlobalSetup()
    {
        for (int i = 0; i < 600; i++)
        {
            var val = Random.Shared.Next(0, 600);
            _hashset.Add((MyHugeEnum)val);
            _bitarray[val] = true;
        }
    }

    [Benchmark(Baseline = true)]
    public bool LookupUsingHashSet()
    {
        var result = false;
        for (int i = 0; i < 1000; i++)
        {
            result = DoLookupUsingHashSet(MyHugeEnum.Val5) && DoLookupUsingHashSet(MyHugeEnum.Val590);
        }

        return result;
    }

    [Benchmark]
    public bool LookupUsingBitArrayWithUnsafeAs()
    {
        var result = false;
        for (int i = 0; i < 1000; i++)
        {
            result = DoLookupUsingBitArrayWithUnsafeAs(MyHugeEnum.Val5) && DoLookupUsingBitArrayWithUnsafeAs(MyHugeEnum.Val590);
        }

        return result;
    }

    [Benchmark]
    public bool LookupUsingBitArrayWithCast()
    {
        var result = false;
        for (int i = 0; i < 1000; i++)
        {
            result = DoLookupUsingBitArrayWithCast(MyHugeEnum.Val5) && DoLookupUsingBitArrayWithCast(MyHugeEnum.Val590);
        }

        return result;
    }

    [Benchmark]
    public bool LookupUsingBitArrayWithConvertToInt32()
    {
        var result = false;
        for (int i = 0; i < 1000; i++)
        {
            result = DoLookupUsingBitArrayWithConverToInt32(MyHugeEnum.Val5) && DoLookupUsingBitArrayWithConverToInt32(MyHugeEnum.Val590);
        }

        return result;
    }

    bool DoLookupUsingHashSet(MyHugeEnum val)
    {
        return _hashset.Contains(val);
    }

    bool DoLookupUsingBitArrayWithUnsafeAs<TEnum>(TEnum val) where TEnum : struct, Enum
    {
        return Unsafe.SizeOf<TEnum>() switch
        {
            1 => _bitarray[Unsafe.As<TEnum, byte>(ref val)],
            2 => _bitarray[Unsafe.As<TEnum, short>(ref val)],
            4 => _bitarray[Unsafe.As<TEnum, int>(ref val)],
            8 => _bitarray[(int)Unsafe.As<TEnum, long>(ref val)],
            _ => false
        };
    }

    bool DoLookupUsingBitArrayWithCast<TEnum>(TEnum val) where TEnum : struct, Enum
    {
        return _bitarray[(int)(object)val];
    }

    bool DoLookupUsingBitArrayWithConverToInt32<TEnum>(TEnum val) where TEnum : struct, Enum
    {
        var num = Convert.ToInt32(val);
        return _bitarray[num];
    }
}

enum MyHugeEnum
{
    Val0,
    Val1,
    Val2,
    Val3,
    Val4,
    Val5,
    Val6,
    Val7,
    Val8,
    Val9,
    Val10,
    Val11,
    Val12,
    Val13,
    Val14,
    Val15,
    Val16,
    Val17,
    Val18,
    Val19,
    Val20,
    Val21,
    Val22,
    Val23,
    Val24,
    Val25,
    Val26,
    Val27,
    Val28,
    Val29,
    Val30,
    Val31,
    Val32,
    Val33,
    Val34,
    Val35,
    Val36,
    Val37,
    Val38,
    Val39,
    Val40,
    Val41,
    Val42,
    Val43,
    Val44,
    Val45,
    Val46,
    Val47,
    Val48,
    Val49,
    Val50,
    Val51,
    Val52,
    Val53,
    Val54,
    Val55,
    Val56,
    Val57,
    Val58,
    Val59,
    Val60,
    Val61,
    Val62,
    Val63,
    Val64,
    Val65,
    Val66,
    Val67,
    Val68,
    Val69,
    Val70,
    Val71,
    Val72,
    Val73,
    Val74,
    Val75,
    Val76,
    Val77,
    Val78,
    Val79,
    Val80,
    Val81,
    Val82,
    Val83,
    Val84,
    Val85,
    Val86,
    Val87,
    Val88,
    Val89,
    Val90,
    Val91,
    Val92,
    Val93,
    Val94,
    Val95,
    Val96,
    Val97,
    Val98,
    Val99,
    Val100,
    Val101,
    Val102,
    Val103,
    Val104,
    Val105,
    Val106,
    Val107,
    Val108,
    Val109,
    Val110,
    Val111,
    Val112,
    Val113,
    Val114,
    Val115,
    Val116,
    Val117,
    Val118,
    Val119,
    Val120,
    Val121,
    Val122,
    Val123,
    Val124,
    Val125,
    Val126,
    Val127,
    Val128,
    Val129,
    Val130,
    Val131,
    Val132,
    Val133,
    Val134,
    Val135,
    Val136,
    Val137,
    Val138,
    Val139,
    Val140,
    Val141,
    Val142,
    Val143,
    Val144,
    Val145,
    Val146,
    Val147,
    Val148,
    Val149,
    Val150,
    Val151,
    Val152,
    Val153,
    Val154,
    Val155,
    Val156,
    Val157,
    Val158,
    Val159,
    Val160,
    Val161,
    Val162,
    Val163,
    Val164,
    Val165,
    Val166,
    Val167,
    Val168,
    Val169,
    Val170,
    Val171,
    Val172,
    Val173,
    Val174,
    Val175,
    Val176,
    Val177,
    Val178,
    Val179,
    Val180,
    Val181,
    Val182,
    Val183,
    Val184,
    Val185,
    Val186,
    Val187,
    Val188,
    Val189,
    Val190,
    Val191,
    Val192,
    Val193,
    Val194,
    Val195,
    Val196,
    Val197,
    Val198,
    Val199,
    Val200,
    Val201,
    Val202,
    Val203,
    Val204,
    Val205,
    Val206,
    Val207,
    Val208,
    Val209,
    Val210,
    Val211,
    Val212,
    Val213,
    Val214,
    Val215,
    Val216,
    Val217,
    Val218,
    Val219,
    Val220,
    Val221,
    Val222,
    Val223,
    Val224,
    Val225,
    Val226,
    Val227,
    Val228,
    Val229,
    Val230,
    Val231,
    Val232,
    Val233,
    Val234,
    Val235,
    Val236,
    Val237,
    Val238,
    Val239,
    Val240,
    Val241,
    Val242,
    Val243,
    Val244,
    Val245,
    Val246,
    Val247,
    Val248,
    Val249,
    Val250,
    Val251,
    Val252,
    Val253,
    Val254,
    Val255,
    Val256,
    Val257,
    Val258,
    Val259,
    Val260,
    Val261,
    Val262,
    Val263,
    Val264,
    Val265,
    Val266,
    Val267,
    Val268,
    Val269,
    Val270,
    Val271,
    Val272,
    Val273,
    Val274,
    Val275,
    Val276,
    Val277,
    Val278,
    Val279,
    Val280,
    Val281,
    Val282,
    Val283,
    Val284,
    Val285,
    Val286,
    Val287,
    Val288,
    Val289,
    Val290,
    Val291,
    Val292,
    Val293,
    Val294,
    Val295,
    Val296,
    Val297,
    Val298,
    Val299,
    Val300,
    Val301,
    Val302,
    Val303,
    Val304,
    Val305,
    Val306,
    Val307,
    Val308,
    Val309,
    Val310,
    Val311,
    Val312,
    Val313,
    Val314,
    Val315,
    Val316,
    Val317,
    Val318,
    Val319,
    Val320,
    Val321,
    Val322,
    Val323,
    Val324,
    Val325,
    Val326,
    Val327,
    Val328,
    Val329,
    Val330,
    Val331,
    Val332,
    Val333,
    Val334,
    Val335,
    Val336,
    Val337,
    Val338,
    Val339,
    Val340,
    Val341,
    Val342,
    Val343,
    Val344,
    Val345,
    Val346,
    Val347,
    Val348,
    Val349,
    Val350,
    Val351,
    Val352,
    Val353,
    Val354,
    Val355,
    Val356,
    Val357,
    Val358,
    Val359,
    Val360,
    Val361,
    Val362,
    Val363,
    Val364,
    Val365,
    Val366,
    Val367,
    Val368,
    Val369,
    Val370,
    Val371,
    Val372,
    Val373,
    Val374,
    Val375,
    Val376,
    Val377,
    Val378,
    Val379,
    Val380,
    Val381,
    Val382,
    Val383,
    Val384,
    Val385,
    Val386,
    Val387,
    Val388,
    Val389,
    Val390,
    Val391,
    Val392,
    Val393,
    Val394,
    Val395,
    Val396,
    Val397,
    Val398,
    Val399,
    Val400,
    Val401,
    Val402,
    Val403,
    Val404,
    Val405,
    Val406,
    Val407,
    Val408,
    Val409,
    Val410,
    Val411,
    Val412,
    Val413,
    Val414,
    Val415,
    Val416,
    Val417,
    Val418,
    Val419,
    Val420,
    Val421,
    Val422,
    Val423,
    Val424,
    Val425,
    Val426,
    Val427,
    Val428,
    Val429,
    Val430,
    Val431,
    Val432,
    Val433,
    Val434,
    Val435,
    Val436,
    Val437,
    Val438,
    Val439,
    Val440,
    Val441,
    Val442,
    Val443,
    Val444,
    Val445,
    Val446,
    Val447,
    Val448,
    Val449,
    Val450,
    Val451,
    Val452,
    Val453,
    Val454,
    Val455,
    Val456,
    Val457,
    Val458,
    Val459,
    Val460,
    Val461,
    Val462,
    Val463,
    Val464,
    Val465,
    Val466,
    Val467,
    Val468,
    Val469,
    Val470,
    Val471,
    Val472,
    Val473,
    Val474,
    Val475,
    Val476,
    Val477,
    Val478,
    Val479,
    Val480,
    Val481,
    Val482,
    Val483,
    Val484,
    Val485,
    Val486,
    Val487,
    Val488,
    Val489,
    Val490,
    Val491,
    Val492,
    Val493,
    Val494,
    Val495,
    Val496,
    Val497,
    Val498,
    Val499,
    Val500,
    Val501,
    Val502,
    Val503,
    Val504,
    Val505,
    Val506,
    Val507,
    Val508,
    Val509,
    Val510,
    Val511,
    Val512,
    Val513,
    Val514,
    Val515,
    Val516,
    Val517,
    Val518,
    Val519,
    Val520,
    Val521,
    Val522,
    Val523,
    Val524,
    Val525,
    Val526,
    Val527,
    Val528,
    Val529,
    Val530,
    Val531,
    Val532,
    Val533,
    Val534,
    Val535,
    Val536,
    Val537,
    Val538,
    Val539,
    Val540,
    Val541,
    Val542,
    Val543,
    Val544,
    Val545,
    Val546,
    Val547,
    Val548,
    Val549,
    Val550,
    Val551,
    Val552,
    Val553,
    Val554,
    Val555,
    Val556,
    Val557,
    Val558,
    Val559,
    Val560,
    Val561,
    Val562,
    Val563,
    Val564,
    Val565,
    Val566,
    Val567,
    Val568,
    Val569,
    Val570,
    Val571,
    Val572,
    Val573,
    Val574,
    Val575,
    Val576,
    Val577,
    Val578,
    Val579,
    Val580,
    Val581,
    Val582,
    Val583,
    Val584,
    Val585,
    Val586,
    Val587,
    Val588,
    Val589,
    Val590,
    Val591,
    Val592,
    Val593,
    Val594,
    Val595,
    Val596,
    Val597,
    Val598,
    Val599,
    Val600
}
